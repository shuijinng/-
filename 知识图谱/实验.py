import random
from neo4j import GraphDatabase

# ========== 配置 ==========
URI = "bolt://localhost:7687"
USERNAME = "neo4j"
PASSWORD = "12345678"  # ❗请替换为你的实际密码

# ========== 你的数据 ==========
data = {
  "count": 175,
  "detail": {
    "companies": [
      "万达影视",
      "上影集团",
      "上海东方影视发行有限责任公司",
      "上海繁花里企业发展有限公司",
      "中国电影股份有限公司",
      "中影集团",
      "光线传媒",
      "北京电影制片厂",
      "北京电影学院青年电影制片厂",
      "北京电视艺术中心",
      "华纳兄弟",
      "华谊",
      "华谊兄弟",
      "华谊兄弟传媒有限公司",
      "华谊兄弟传媒集团",
      "博纳影业",
      "天幕制作有限公司",
      "广西电影制片厂",
      "影之杰制作有限公司",
      "新丽传媒股份有限公司",
      "新艺城影业公司",
      "永佳影业有限公司",
      "汤臣电影有限公司",
      "泽东电影公司",
      "派拉蒙中国",
      "浙江东阳美拉传媒有限",
      "浙江东阳美拉传媒有限公司",
      "环球影业",
      "索尼电影娱乐公司",
      "美国福斯探照灯公司",
      "腾讯影业",
      "西安电影制片厂",
      "迪士尼中国",
      "阿里影业"
    ],
    "movies": [
      "一秒钟",
      "哪吒之魔童降世",
      "地久天长",
      "悬崖之上",
      "我不是药神",
      "我不是药神_222",
      "战狼",
      "无间道",
      "流浪地球",
      "红海行动",
      "让子弹飞",
      "让子弹飞_423",
      "追风筝的人",
      "追风筝的人_741",
      "追风筝的人_781"
    ],
    "persons": [
      "davidyates",
      "guynormanbee",
      "万玛才旦",
      "严歌苓",
      "丹尼斯·霍珀",
      "乔治·巴布鲁阿尼",
      "亚当·雷纳",
      "任达华",
      "倪淑君",
      "傅彪",
      "元彪",
      "关之琳",
      "冯小刚",
      "冯淬帆",
      "刘德华",
      "刘恒",
      "刘昊然",
      "刘若英",
      "刘镇伟",
      "卢冠廷",
      "叶倩文",
      "吕丽萍",
      "吕良伟",
      "吴京",
      "吴倩莲",
      "吴小云",
      "周润发",
      "夏钢",
      "大卫·叶茨",
      "姚晨",
      "姜文",
      "孙淳",
      "巩俐",
      "希斯·莱杰",
      "庹宗华",
      "张东健",
      "张同祖",
      "张嘉佳",
      "张国",
      "张国立",
      "张国荣",
      "张学友",
      "张建亚",
      "张曼玉",
      "张榕容",
      "张涵予",
      "张艾嘉",
      "张荣吉",
      "张震",
      "彦小追",
      "徐克",
      "徐峥",
      "徐帆",
      "徐杰",
      "拉菲·斯波",
      "斯基特·乌尔里奇",
      "易烊千玺",
      "曾志伟",
      "李嘉欣",
      "李安",
      "杨千嬅",
      "杨紫琼",
      "杨采钰",
      "杰克·吉伦哈尔",
      "林青",
      "林青霞",
      "柯佳嬿",
      "柯蓝",
      "梁朝",
      "梁朝伟",
      "汤唯",
      "海瑟·格",
      "王姬",
      "王学圻",
      "王宝",
      "王家卫",
      "王朔",
      "王莱",
      "王菲",
      "王蕙玲",
      "白百何",
      "真田广之",
      "程孝泽",
      "章子怡",
      "米切尔·利",
      "罗文",
      "罗美薇",
      "舒淇",
      "芦苇",
      "苏拉·沙玛",
      "范冰冰",
      "范植伟",
      "葛优",
      "葛民辉",
      "袁苑",
      "西奥·安哲罗普洛斯",
      "詹妮",
      "詹妮佛·芬尼甘",
      "詹姆斯·弗雷特",
      "许冠英",
      "诺拉",
      "谢园",
      "谭家明",
      "赵文瑄",
      "迪米特利·马丁",
      "邓光荣",
      "邓超",
      "郎雄",
      "郑晓龙",
      "金城武",
      "阿什拉夫·巴姆",
      "陈凯歌",
      "陈勋奇",
      "陈道明",
      "陈飞宇",
      "霍建起",
      "马伟豪",
      "马羚",
      "高圆圆",
      "黄建新",
      "黄渤",
      "黄磊",
      "黄裕",
      "黄轩",
      "黎应就",
      "黎明"
    ]
  },
  "names": [
    "davidyates",
    "guynormanbee",
    "一秒钟",
    "万玛才旦",
    "万达影视",
    "上影集团",
    "上海东方影视发行有限责任公司",
    "上海繁花里企业发展有限公司",
    "严歌苓",
    "中国电影股份有限公司",
    "中影集团",
    "丹尼斯·霍珀",
    "乔治·巴布鲁阿尼",
    "亚当·雷纳",
    "任达华",
    "倪淑君",
    "傅彪",
    "元彪",
    "光线传媒",
    "关之琳",
    "冯小刚",
    "冯淬帆",
    "刘德华",
    "刘恒",
    "刘昊然",
    "刘若英",
    "刘镇伟",
    "北京电影制片厂",
    "北京电影学院青年电影制片厂",
    "北京电视艺术中心",
    "华纳兄弟",
    "华谊",
    "华谊兄弟",
    "华谊兄弟传媒有限公司",
    "华谊兄弟传媒集团",
    "博纳影业",
    "卢冠廷",
    "叶倩文",
    "吕丽萍",
    "吕良伟",
    "吴京",
    "吴倩莲",
    "吴小云",
    "周润发",
    "哪吒之魔童降世",
    "地久天长",
    "夏钢",
    "大卫·叶茨",
    "天幕制作有限公司",
    "姚晨",
    "姜文",
    "孙淳",
    "巩俐",
    "希斯·莱杰",
    "广西电影制片厂",
    "庹宗华",
    "张东健",
    "张同祖",
    "张嘉佳",
    "张国",
    "张国立",
    "张国荣",
    "张学友",
    "张建亚",
    "张曼玉",
    "张榕容",
    "张涵予",
    "张艾嘉",
    "张荣吉",
    "张震",
    "彦小追",
    "影之杰制作有限公司",
    "徐克",
    "徐峥",
    "徐帆",
    "徐杰",
    "悬崖之上",
    "我不是药神",
    "我不是药神_222",
    "战狼",
    "拉菲·斯波",
    "斯基特·乌尔里奇",
    "新丽传媒股份有限公司",
    "新艺城影业公司",
    "无间道",
    "易烊千玺",
    "曾志伟",
    "李嘉欣",
    "李安",
    "杨千嬅",
    "杨紫琼",
    "杨采钰",
    "杰克·吉伦哈尔",
    "林青",
    "林青霞",
    "柯佳嬿",
    "柯蓝",
    "梁朝",
    "梁朝伟",
    "永佳影业有限公司",
    "汤唯",
    "汤臣电影有限公司",
    "泽东电影公司",
    "派拉蒙中国",
    "流浪地球",
    "浙江东阳美拉传媒有限",
    "浙江东阳美拉传媒有限公司",
    "海瑟·格",
    "王姬",
    "王学圻",
    "王宝",
    "王家卫",
    "王朔",
    "王莱",
    "王菲",
    "王蕙玲",
    "环球影业",
    "白百何",
    "真田广之",
    "程孝泽",
    "章子怡",
    "米切尔·利",
    "索尼电影娱乐公司",
    "红海行动",
    "罗文",
    "罗美薇",
    "美国福斯探照灯公司",
    "腾讯影业",
    "舒淇",
    "芦苇",
    "苏拉·沙玛",
    "范冰冰",
    "范植伟",
    "葛优",
    "葛民辉",
    "袁苑",
    "西奥·安哲罗普洛斯",
    "西安电影制片厂",
    "詹妮",
    "詹妮佛·芬尼甘",
    "詹姆斯·弗雷特",
    "让子弹飞",
    "让子弹飞_423",
    "许冠英",
    "诺拉",
    "谢园",
    "谭家明",
    "赵文瑄",
    "迪士尼中国",
    "迪米特利·马丁",
    "追风筝的人",
    "追风筝的人_741",
    "追风筝的人_781",
    "邓光荣",
    "邓超",
    "郎雄",
    "郑晓龙",
    "金城武",
    "阿什拉夫·巴姆",
    "阿里影业",
    "陈凯歌",
    "陈勋奇",
    "陈道明",
    "陈飞宇",
    "霍建起",
    "马伟豪",
    "马羚",
    "高圆圆",
    "黄建新",
    "黄渤",
    "黄磊",
    "黄裕",
    "黄轩",
    "黎应就",
    "黎明"
  ],
}

# 提取列表
persons = data["detail"]["persons"]
movies = data["detail"]["movies"]
companies = data["detail"]["companies"]

# ========== 连接数据库 ==========
driver = GraphDatabase.driver(URI, auth=(USERNAME, PASSWORD))

try:
    with driver.session() as session:
        session.run("RETURN 1")
    print("✅ 成功连接到 Neo4j")
except Exception as e:
    print("❌ 连接失败:", e)
    exit(1)

# ========== 函数：创建节点 ==========
def create_nodes():
    with driver.session() as session:
        print("📌 正在创建人物节点...")
        for name in persons:
            session.run("""
                MERGE (p:Person {name: $name})
                SET p.created = timestamp()
            """, name=name)

        print("📌 正在创建电影节点...")
        for name in movies:
            session.run("""
                MERGE (m:Movie {name: $name})
                SET m.year = 2000 + toInteger(rand() * 25),
                    m.box_office = toInteger(rand() * 100000)  // 随机票房（万元）
            """, name=name)

        print("📌 正在创建公司节点...")
        for name in companies:
            session.run("""
                MERGE (c:Company {name: $name})
            """, name=name)

        print("✅ 所有节点创建完成")
def create_movie_genres_only():
    """
    为所有已存在的 Movie 节点绑定 2 个随机类型，并确保不重复
    """
    with driver.session() as session:
        genre_names = [
            "剧情", "喜剧", "动作", "爱情", "科幻", "悬疑", "惊悚", "恐怖",
            "动画", "冒险", "犯罪", "历史", "战争", "音乐", "家庭", "奇幻"
        ]

        print("📌 正在创建所有类型节点 (Genre)...")
        for name in genre_names:
            session.run("MERGE (:Genre {name: $name})", name=name)

        # 🔥 🔥 🔥 关键：强制删除所有 HAS_GENRE 关系，并确认删除
        print("🧹 正在删除所有电影-类型关系...")
        deleted = session.run("MATCH ()-[r:HAS_GENRE]->() DELETE r RETURN count(r) AS deleted_count")
        count = [record["deleted_count"] for record in deleted][0]
        print(f"🗑️  已删除 {count} 条 HAS_GENRE 关系")

        # 获取所有电影
        result = session.run("MATCH (m:Movie) RETURN m.name AS name")
        movies = [record["name"] for record in result]

        if not movies:
            print("❌ 没有找到任何 Movie 节点，请先创建电影！")
            return

        print(f"🎬 共 {len(movies)} 部电影，正在绑定 2 个类型...")

        # 为每部电影绑定 2 个随机类型
        for movie_name in movies:
            chosen_genres = random.sample(genre_names, k=2)  # 固定为 2 个

            for genre_name in chosen_genres:
                session.run("""
                    MATCH (m:Movie {name: $movie_name})
                    MATCH (g:Genre {name: $genre_name})
                    MERGE (m)-[:HAS_GENRE]->(g)
                """, movie_name=movie_name, genre_name=genre_name)

        print("✅ 所有电影的类型绑定完成！")
# ========== 主函数 ==========
def main():
    print("🚀 开始写入数据到 Neo4j...")
    create_nodes()

    # ✅ 新增：绑定电影类型
    create_movie_genres_only()

    print("🎉 数据写入完成！包含电影类型。")


if __name__ == "__main__":
    main()